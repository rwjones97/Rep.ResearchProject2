Prj2-redo.spin.R
jonesr
2020-06-09
##Reproducible Research Project 2 NOAA Storm Data Analysis
##Week 4 Assignment
##Author.Rwjones97
##June 8, 2020

##The basic goal of this assignment is to explore the NOAA Storm Database create graphs over certain severe weather events. From tornadoes, hail, drought, etc. these weather events cause devestation to many people throughout the United States. What is listed below is a full report of the anaylsis I did using RStudio. 

##The data for this assignment come in the form of a comma-separated-value file compressed via the bzip2 algorithm to reduce its size. You can download the file from the course web site: https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip

## PART I 

library("data.table")
library("ggplot2")

fileUrl <- "https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2FStormData.csv.bz2"

download.file(fileUrl, destfile = paste0("/Users/jonesr/Desktop", '/repdata%2Fdata%2FStormData.csv.bz2'))

stormDF <- read.csv("/Users/jonesr/Desktop/repdata%2Fdata%2FStormData.csv.bz2")

## Next convert from data.frame to data.table

stormDT <- as.data.table(stormDF)

## Then examine and set column names
colnames(stormDT)
##  [1] "STATE__"    "BGN_DATE"   "BGN_TIME"   "TIME_ZONE"  "COUNTY"    
##  [6] "COUNTYNAME" "STATE"      "EVTYPE"     "BGN_RANGE"  "BGN_AZI"   
## [11] "BGN_LOCATI" "END_DATE"   "END_TIME"   "COUNTY_END" "COUNTYENDN"
## [16] "END_RANGE"  "END_AZI"    "END_LOCATI" "LENGTH"     "WIDTH"     
## [21] "F"          "MAG"        "FATALITIES" "INJURIES"   "PROPDMG"   
## [26] "PROPDMGEXP" "CROPDMG"    "CROPDMGEXP" "WFO"        "STATEOFFIC"
## [31] "ZONENAMES"  "LATITUDE"   "LONGITUDE"  "LATITUDE_E" "LONGITUDE_"
## [36] "REMARKS"    "REFNUM"
## Part II

## Subset the dataset on the parameters of interest by removing the columns we don't need. Focus only on the columns needed for this research. 

cols2Remove <- colnames(stormDT[, !c("EVTYPE"
                                     , "FATALITIES"
                                     , "INJURIES"
                                     , "PROPDMG"
                                     , "PROPDMGEXP"
                                     , "CROPDMG"
                                     , "CROPDMGEXP")])

## Removing columns
stormDT[, c(cols2Remove) := NULL]


## Use primary data where fatalities or injuries occurred. 
stormDT <- stormDT[(EVTYPE != "?" & 
                      (INJURIES > 0 | FATALITIES > 0 | PROPDMG > 0 | CROPDMG > 0)), c("EVTYPE"
                                                                                      , "FATALITIES"
                                                                                      , "INJURIES"
                                                                                      , "PROPDMG"
                                                                                      , "PROPDMGEXP"
                                                                                      , "CROPDMG"
                                                                                      , "CROPDMGEXP") ]

## Part III

## Converting Exponent Columns into Actual Exponents 

## Change all damage exponents to uppercase for a cleaner look.

cols <- c("PROPDMGEXP", "CROPDMGEXP")

stormDT[,  (cols) := c(lapply(.SD, toupper)), .SDcols = cols]

## Map property damage in alphanumeric exponents to numeric values.
propDmgKey <-  c("\"\"" = 10^0,
                 "-" = 10^0, 
                 "+" = 10^0,
                 "0" = 10^0,
                 "1" = 10^1,
                 "2" = 10^2,
                 "3" = 10^3,
                 "4" = 10^4,
                 "5" = 10^5,
                 "6" = 10^6,
                 "7" = 10^7,
                 "8" = 10^8,
                 "9" = 10^9,
                 "H" = 10^2,
                 "K" = 10^3,
                 "M" = 10^6,
                 "B" = 10^9)


## Map crop damage alphanumeric exponents to numeric values
cropDmgKey <-  c("\"\"" = 10^0,
                 "?" = 10^0, 
                 "0" = 10^0,
                 "K" = 10^3,
                 "M" = 10^6,
                 "B" = 10^9)


stormDT[, PROPDMGEXP := propDmgKey[as.character(stormDT[,PROPDMGEXP])]]
stormDT[is.na(PROPDMGEXP), PROPDMGEXP := 10^0 ]



stormDT[, CROPDMGEXP := cropDmgKey[as.character(stormDT[,CROPDMGEXP])] ]
stormDT[is.na(CROPDMGEXP), CROPDMGEXP := 10^0 ]


## Part IV

## Making Economic Cost Columns

stormDT <- stormDT[, .(EVTYPE, FATALITIES, INJURIES, PROPDMG, PROPDMGEXP, propCost = PROPDMG * PROPDMGEXP, CROPDMG, CROPDMGEXP, cropCost = CROPDMG * CROPDMGEXP)]

## Part V

## Calcuating Total Property and Crop Cost

totalCostDT <- stormDT[, .(propCost = sum(propCost), cropCost = sum(cropCost), Total_Cost = sum(propCost) + sum(cropCost)), by = .(EVTYPE)]

totalCostDT <- totalCostDT[order(-Total_Cost), ]

totalCostDT <- totalCostDT[1:10, ]

head(totalCostDT, 5)
##               EVTYPE     propCost   cropCost   Total_Cost
## 1:             FLOOD 144657709807 5661968450 150319678257
## 2: HURRICANE/TYPHOON  69305840000 2607872800  71913712800
## 3:           TORNADO  56947380677  414953270  57362333947
## 4:       STORM SURGE  43323536000       5000  43323541000
## 5:              HAIL  15735267513 3025954473  18761221986
## Part VI

## Calcuating Total Fatalities and Injuries

totalInjuriesDT <- stormDT[, .(FATALITIES = sum(FATALITIES), INJURIES = sum(INJURIES), totals = sum(FATALITIES) + sum(INJURIES)), by = .(EVTYPE)]

totalInjuriesDT <- totalInjuriesDT[order(-FATALITIES), ]

totalInjuriesDT <- totalInjuriesDT[1:10, ]

head(totalInjuriesDT, 5)
##            EVTYPE FATALITIES INJURIES totals
## 1:        TORNADO       5633    91346  96979
## 2: EXCESSIVE HEAT       1903     6525   8428
## 3:    FLASH FLOOD        978     1777   2755
## 4:           HEAT        937     2100   3037
## 5:      LIGHTNING        816     5230   6046
## Part VII

## Results 1.0

## Putting data.table together so that it is easier to put in bar graph format 

bad_stuff <- melt(totalInjuriesDT, id.vars="EVTYPE", variable.name = "natural_diasters")
head(bad_stuff, 5)
##            EVTYPE natural_diasters value
## 1:        TORNADO       FATALITIES  5633
## 2: EXCESSIVE HEAT       FATALITIES  1903
## 3:    FLASH FLOOD       FATALITIES   978
## 4:           HEAT       FATALITIES   937
## 5:      LIGHTNING       FATALITIES   816
## Created chart 1. The following distributes the X and Y axis

healthChart <- ggplot(bad_stuff, aes(x=reorder(EVTYPE, -value), y=value))


healthChart = healthChart + geom_bar(stat="identity", aes(fill=natural_diasters), position="dodge")

healthChart = healthChart + ylab("Frequency Count") 


healthChart = healthChart + xlab("Event Type") 


healthChart = healthChart + theme(axis.text.x = element_text(angle=45, hjust=1))


healthChart = healthChart + ggtitle("Most Harmful") + theme(plot.title = element_text(hjust = 0.5))

healthChart


## Results 2.0

##  Events that have the Greatest Economic Consequences



econ_consequences <- melt(totalCostDT, id.vars="EVTYPE", variable.name = "Econ_damage")
head(econ_consequences, 5)
##               EVTYPE Econ_damage        value
## 1:             FLOOD    propCost 144657709807
## 2: HURRICANE/TYPHOON    propCost  69305840000
## 3:           TORNADO    propCost  56947380677
## 4:       STORM SURGE    propCost  43323536000
## 5:              HAIL    propCost  15735267513
econChart <- ggplot(econ_consequences, aes(x=reorder(EVTYPE, -value), y=value))


econChart = econChart + geom_bar(stat="identity", aes(fill=Econ_damage), position="dodge")


econChart = econChart + ylab("Cost (dollars)") 

econChart = econChart + xlab("Event Type") 


econChart = econChart + theme(axis.text.x = element_text(angle=45, hjust=1))


econChart = econChart + ggtitle("Economic Consequences") + theme(plot.title = element_text(hjust = 0.5))




econChart


## Final results will also be seperate files in Github.
